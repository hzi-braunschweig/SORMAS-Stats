version: '2.3'
services:
  sormas:
    restart: unless-stopped
    labels:
      - autoheal=true
        # override for stop timeout seconds during restart
      - autoheal.stop.timeout=30
    links:
      - postgres
    image: hzibraunschweig/sormas-application:${SORMAS_DOCKER_VERSION}
    environment:
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - DB_HOST=${DB_HOST}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - DB_JDBC_MAXPOOLSIZE=${DB_JDBC_MAXPOOLSIZE}
      - DB_NAME=${DB_NAME}
      - DB_NAME_AUDIT=${DB_NAME_AUDIT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_FROM=${MAIL_FROM}
      - SORMAS_VERSION=${SORMAS_VERSION}
      - LOCALE=${LOCALE}
      - EPIDPREFIX=${EPIDPREFIX}
      - SEPARATOR=${SEPARATOR}
      - EMAIL_SENDER_ADDRESS=${EMAIL_SENDER_ADDRESS}
      - EMAIL_SENDER_NAME=${EMAIL_SENDER_NAME}
      - LATITUDE=${LATITUDE}
      - LONGITUDE=${LONGITUDE}
      - MAP_ZOOM=${MAP_ZOOM}
      - TZ=${TZ}
      - JVM_MAX=${APPSERVER_JVM_MAX}
      - GEO_UUID=${GEO_UUID}
      - DEVMODE=${DEVMODE}
      - JSON_LOGGING=${JSON_LOGGING}
      - CUSTOMBRANDING_ENABLED=${CUSTOMBRANDING_ENABLED}
      - CUSTOMBRANDING_NAME=${CUSTOMBRANDING_NAME}
      - CUSTOMBRANDING_LOGO_PATH=${CUSTOMBRANDING_LOGO_PATH}
      - CUSTOMBRANDING_USE_LOGINSIDEBAR=${CUSTOMBRANDING_USE_LOGINSIDEBAR}
      - CUSTOMBRANDING_LOGINBACKGROUND_PATH=${CUSTOMBRANDING_LOGINBACKGROUND_PATH}
    volumes:
      - ${SORMAS_PATH}/custom:/opt/sormas/custom
      - ${SORMAS_PATH}/sormas2sormas:/opt/sormas/sormas2sormas
      - ${SORMAS_PATH}/sormas-logs:/opt/domains/sormas/logs
    cpus: ${APPSERVER_CPUS}
    mem_limit: ${APPSERVER_MEM}
    mem_reservation: ${APPSERVER_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "http://localhost:6080/sormas-ui/login"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 300s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    restart: unless-stopped
    labels:
      - autoheal=true
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    #image: hzibraunschweig/sormas-postgres:${SORMAS_DOCKER_VERSION}
    build: docker/postgres/
    environment:
      - POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - DB_NAME=sormas
      - DB_NAME_AUDIT=sormas_audit
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - TZ=${TZ}
    volumes:
      - ${SORMAS_PATH}/psqldata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    cpus: ${DB_CPUS}
    mem_limit: ${DB_MEM}
    mem_reservation: ${DB_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "psql", "-U", "${SORMAS_POSTGRES_USER}", "-c", "SELECT 1;", "${DB_NAME}"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  apache2:
    restart: unless-stopped
    labels:
      - autoheal=true
    links:
      - sormas
    image: hzibraunschweig/sormas-apache2:${SORMAS_DOCKER_VERSION}
    environment:
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - TZ=${TZ}
      - PROMETHEUS_SERVERS=${PROMETHEUS_SERVERS}
    volumes:
      - ./docker/apache2/certs:/usr/local/apache2/certs
      - ${SORMAS_PATH}/apache2_log:/var/log/apache2
    ports:
      - 443:443
      - 80:80
    cpus: ${WEBSERVER_CPUS}
    mem_limit: ${WEBSERVER_MEM}
    mem_reservation: ${WEBSERVER_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "-k", "--resolve", "${SORMAS_SERVER_URL}:443:127.0.0.1", "https://${SORMAS_SERVER_URL}/downloads/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      sormas:
        condition: service_healthy

  statistics:
    restart: unless-stopped
    build: src/stats/
    volumes:
      - ${SORMAS_PATH}/statistics/data/:/srv/data
      - ${SORMAS_PATH}/statistics/output/:/srv/output
    depends_on:
      postgres:
        condition: service_healthy

  grafana:
    restart: unless-stopped
    build: src/grafana/
    environment:
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy